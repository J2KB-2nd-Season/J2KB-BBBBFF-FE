[{"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\index.js":"1","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\App.js":"2","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\reportWebVitals.js":"3","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\_reducers\\index.js":"4","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\_reducers\\user_reducer.js":"5","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\MainPage\\MainPage.js":"6","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\IdPwFind\\IdFind.js":"7","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\LoginPage\\LoginPage.js":"8","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\JoinPage\\JoinPage.js":"9","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\ProductDetailPage\\ProductDetailPage.js":"10","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\UploadProductPage\\UploadProductPage.js":"11","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\IdPwFind\\PwFind.js":"12","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\CustomerPage\\CustomerPage.js":"13","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\AdminPage\\AdminPage.js":"14","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\ServicePage\\ServicePage.js":"15","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\CartPage\\CartPage.js":"16","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\ReviewWritePage\\ReviewWriterPage.js":"17","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\_actions\\user_action.js":"18","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\_actions\\type.js":"19","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\IdPwFind\\IdPwFunc.js":"20","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\utils\\ImageSlider.js":"21","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\utils\\WritingForm.js":"22","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\utils\\Func.js":"23","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\NavBar\\NavBar.js":"24","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\utils\\dropZone.js":"25","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\config.js":"26","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\hoc\\auth.js":"27","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\NavBar\\RightMenu.js":"28","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\NavBar\\BottomMenu.js":"29"},{"size":1105,"mtime":1612875585623,"results":"30","hashOfConfig":"31"},{"size":2753,"mtime":1612929319707,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1612622862879,"results":"33","hashOfConfig":"31"},{"size":166,"mtime":1612876192314,"results":"34","hashOfConfig":"31"},{"size":551,"mtime":1612929941969,"results":"35","hashOfConfig":"31"},{"size":1572,"mtime":1612622862820,"results":"36","hashOfConfig":"31"},{"size":5805,"mtime":1612622862816,"results":"37","hashOfConfig":"31"},{"size":3690,"mtime":1612622862818,"results":"38","hashOfConfig":"31"},{"size":10405,"mtime":1612622862817,"results":"39","hashOfConfig":"31"},{"size":5510,"mtime":1612622862821,"results":"40","hashOfConfig":"31"},{"size":3078,"mtime":1612622862823,"results":"41","hashOfConfig":"31"},{"size":8023,"mtime":1612622862817,"results":"42","hashOfConfig":"31"},{"size":1618,"mtime":1612622862814,"results":"43","hashOfConfig":"31"},{"size":1597,"mtime":1612622862813,"results":"44","hashOfConfig":"31"},{"size":1606,"mtime":1612622862822,"results":"45","hashOfConfig":"31"},{"size":622,"mtime":1612622862814,"results":"46","hashOfConfig":"31"},{"size":915,"mtime":1612622862822,"results":"47","hashOfConfig":"31"},{"size":977,"mtime":1612877380563,"results":"48","hashOfConfig":"31"},{"size":162,"mtime":1612874721393,"results":"49","hashOfConfig":"31"},{"size":1275,"mtime":1612622862817,"results":"50","hashOfConfig":"31"},{"size":993,"mtime":1612930162035,"results":"51","hashOfConfig":"31"},{"size":1911,"mtime":1612622862825,"results":"52","hashOfConfig":"31"},{"size":8836,"mtime":1612622862824,"results":"53","hashOfConfig":"31"},{"size":1314,"mtime":1612930306108,"results":"54","hashOfConfig":"31"},{"size":1651,"mtime":1612874493725,"results":"55","hashOfConfig":"31"},{"size":89,"mtime":1612876138698,"results":"56","hashOfConfig":"31"},{"size":1275,"mtime":1612931626386,"results":"57","hashOfConfig":"31"},{"size":2777,"mtime":1612930184435,"results":"58","hashOfConfig":"31"},{"size":1895,"mtime":1612931576090,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"101b3j1",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\index.js",[],["125","126"],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\App.js",["127","128"],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\reportWebVitals.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\_reducers\\index.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\_reducers\\user_reducer.js",["129"],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\MainPage\\MainPage.js",["130","131","132"],"import React, { useState } from 'react';\r\nimport { Row, Col, Card, Input } from 'antd';\r\nimport ImageSlider from '../utils/ImageSlider';\r\nimport './MainPage.css';\r\nimport 'antd/dist/antd.css';\r\nimport '../input.css';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport { Link }from \"react-router-dom\";\r\nimport { Helmet } from 'react-helmet';\r\nimport products from \"../DeleteThisData/products.json\";\r\n\r\n{\r\n    /* 나중에는 products 서버에서 가져옴(더미 데이터) */\r\n}\r\n\r\nconst { Meta } = Card;\r\n\r\n\r\nfunction Main() {\r\n\r\n\r\n    const renderCards = products.map((product, index) => {\r\n        return (\r\n            <Col key={index} lg={6} md={8} xs={24}>\r\n                <Link to={{\r\n                    pathname: `/product/${product.num}`,\r\n                    state: {\r\n                        product:product\r\n                    }\r\n                }}>\r\n                    <Card cover={<ImageSlider images={product.images}/>} >\r\n                        <Meta title={product.name} description={product.detail} />\r\n                    </Card>\r\n                </Link>\r\n            </Col>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div id=\"wrap\">\r\n            <Helmet>\r\n                <title>J2KB</title>\r\n            </Helmet>\r\n            <NavBar />\r\n            <div className=\"banner\">\r\n                <p>배너</p>\r\n            </div>\r\n            <div className=\"contents\" style={{ width: '55%', margin: '3rem auto' }}>\r\n                <Row gutter={[20, 20]}>{renderCards}</Row>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\IdPwFind\\IdFind.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\LoginPage\\LoginPage.js",["133","134","135","136","137","138"],"import React, { useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginUser } from '../../_actions/user_action';\r\nimport { Input } from 'antd';\r\nimport { Helmet } from 'react-helmet';\r\nimport styles from './LoginPage.module.css';\r\nimport styles2 from '../JoinPage/JoinPage.module.css';\r\nimport '../input.css';\r\n\r\nfunction LoginPage(props) {\r\n    const [Id, setId] = useState('');\r\n    const [Password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        let data = {\r\n            id: Id,\r\n            password: Password,\r\n        };\r\n        {\r\n            /*\r\n\r\n            서버로 요청\r\n\r\n            dispatch(loginUser(data)).then((response) => {\r\n                if (response.payload.loginSuccess) {\r\n                    // 메인으로 이동\r\n                    props.history.push('/');\r\n                } else {\r\n                    alert('로그인 실패!');\r\n                }\r\n            });\r\n        */\r\n        }\r\n        {\r\n            /* *임시* 나중에 삭제 예정 */\r\n        }\r\n        if (true) {\r\n            alert(`${Id}님 환영합니다!`);\r\n            // 메인으로 이동\r\n            props.history.push('/');\r\n        }\r\n        {\r\n            /* *임시* 나중에 삭제 예정 */\r\n        }\r\n    };\r\n\r\n    const onIdHandler = (e) => {\r\n        setId(e.currentTarget.value);\r\n    };\r\n    const onPasswordHandler = (e) => {\r\n        setPassword(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrap}>\r\n            <Helmet>\r\n                <title>로그인</title>\r\n            </Helmet>\r\n            <div className={styles.container}>\r\n                <div className={styles.name}>\r\n                    <div className={styles.title}>J2KB STORE</div>\r\n                </div>\r\n                <div className={styles2.form}>\r\n                    <form onSubmit={handleLogin}>\r\n                        <Input\r\n                            className={'loginInput'}\r\n                            placeholder=\"아이디를 입력해 주세요.\"\r\n                            value={Id}\r\n                            minLength={5}\r\n                            maxLength={20}\r\n                            onChange={onIdHandler}\r\n                            bordered={false}\r\n                            required\r\n                        />\r\n                        <Input.Password\r\n                            className={'loginInput'}\r\n                            placeholder=\"비밀번호를 입력해 주세요.\"\r\n                            value={Password}\r\n                            minLength={8}\r\n                            maxLength={20}\r\n                            onChange={onPasswordHandler}\r\n                            bordered={false}\r\n                            required\r\n                        />\r\n                        <button className={styles2.loginButton} type=\"submit\">\r\n                            로그인\r\n                        </button>\r\n                    </form>\r\n                    계정이 없으신가요? <Link to=\"/join\">회원가입</Link>\r\n                    <br/>\r\n                    <br/>\r\n                    비밀번호를 잊어버리셨나요? <Link to=\"/find/password\">비밀번호 찾기</Link>\r\n                </div>\r\n                <div className={styles2.info}>\r\n                    <Link to=\"/service\">고객센터</Link>\r\n                    <h3>J2KB Study Group. since 2020</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\JoinPage\\JoinPage.js",["139","140","141","142","143","144","145"],"import React, { useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { registerUser } from '../../_actions/user_action';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Input } from 'antd';\r\nimport {\r\n    checkName,\r\n    checkID,\r\n    checkPW,\r\n    checkPW2,\r\n    checkMail,\r\n    checkNumber,\r\n    checkAddress,\r\n    handleButton,\r\n} from '../utils/Func';\r\nimport styles from './JoinPage.module.css';\r\nimport '../input.css';\r\n\r\nfunction JoinPage(props) {\r\n    const [Name, setName] = useState('');\r\n    const [Id, setId] = useState('');\r\n    const [PW, setPW] = useState('');\r\n    const [PW2, setPW2] = useState('');\r\n    const [Mail, setMail] = useState('');\r\n    const [Number, setNumber] = useState('');\r\n    const [Address, setAddress] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    {\r\n        /*\r\n    \r\n        Func으로 옮겼습니다\r\n    \r\n    */\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        //회원가입 버튼을 눌렀을 때 양식을 체크하는 함수\r\n        event.preventDefault();\r\n\r\n        let data = {\r\n            name: Name,\r\n            id: Id,\r\n            password: PW,\r\n            mail: Mail,\r\n            number: Number,\r\n            address: Address,\r\n        };\r\n\r\n        {\r\n            /*\r\n        \r\n            서버로 요청\r\n\r\n            dispatch(registerUser(data)).then((response) => {\r\n            if (response.payload.loginSuccess) {\r\n                alert(`회원가입 성공!`);\r\n                // 로그인으로 이동\r\n                props.history.push('/login');\r\n            } else {\r\n                alert('회원가입 실패!');\r\n            }\r\n        });\r\n        \r\n        */\r\n        }\r\n\r\n        {\r\n            /* *임시* 나중에 삭제 예정 */\r\n        }\r\n        if (true) {\r\n            alert('회원가입 성공!');\r\n            // 로그인으로 이동\r\n            props.history.push('/login');\r\n        } else {\r\n            alert('회원가입 실패!');\r\n        }\r\n        {\r\n            /* *임시* 나중에 삭제 예정 */\r\n        }\r\n    };\r\n\r\n    const onNamehandler = (e) => {\r\n        setName(e.currentTarget.value);\r\n    };\r\n    const onIdhandler = (e) => {\r\n        setId(e.currentTarget.value);\r\n    };\r\n    const onPWhandler = (e) => {\r\n        setPW(e.currentTarget.value);\r\n    };\r\n    const onPW2handler = (e) => {\r\n        setPW2(e.currentTarget.value);\r\n    };\r\n    const onMailhandler = (e) => {\r\n        setMail(e.currentTarget.value);\r\n    };\r\n    const onNumberhandler = (e) => {\r\n        setNumber(e.currentTarget.value);\r\n    };\r\n    const onAddresshandler = (e) => {\r\n        setAddress(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrap}>\r\n            <Helmet>\r\n                <title>회원가입</title>\r\n            </Helmet>\r\n            <div className={styles.container}>\r\n                <div className={styles.name}>\r\n                    <div className={styles.title}>J2KB STORE</div>\r\n                    <h3>회원가입</h3>\r\n                </div>\r\n                <div className={styles.form}>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className={styles.inputContainer}>\r\n                            <label className={styles.label} htmlFor=\"member_name\">\r\n                                이름(성함)<b className={styles.b}>*</b>{' '}\r\n                            </label>\r\n                            <Input\r\n                                className=\"joinInput\"\r\n                                id={'member_name'}\r\n                                placeholder=\"이름(성함)\"\r\n                                value={Name}\r\n                                maxLength={20}\r\n                                onChange={(e) => {\r\n                                    onNamehandler(e);\r\n                                    checkName();\r\n                                    handleButton();\r\n                                }}\r\n                                bordered={false}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className={styles.inputContainer}>\r\n                            <label className={styles.label} htmlFor=\"member_id\">\r\n                                아이디<b className={styles.b}>*</b>\r\n                            </label>\r\n                            <Input\r\n                                className=\"joinInput\"\r\n                                id={'member_id'}\r\n                                placeholder=\"아이디 입력(5자 이상)\"\r\n                                value={Id}\r\n                                maxLength={20}\r\n                                onChange={(e) => {\r\n                                    onIdhandler(e);\r\n                                    checkID();\r\n                                    handleButton();\r\n                                }}\r\n                                bordered={false}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className={styles.inputContainer}>\r\n                            <label className={styles.label} htmlFor=\"member_pw\">\r\n                                비밀번호<b className={styles.b}>*</b>\r\n                            </label>\r\n                            <Input.Password\r\n                                className=\"joinInput\"\r\n                                id={'member_pw'}\r\n                                placeholder=\"비밀번호(숫자,영문,특수문자 조합 8~30자)\"\r\n                                value={PW}\r\n                                maxLength={30}\r\n                                onChange={(e) => {\r\n                                    onPWhandler(e);\r\n                                    checkPW();\r\n                                    handleButton();\r\n                                }}\r\n                                bordered={false}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className={styles.inputContainer}>\r\n                            <Input.Password\r\n                                className=\"joinInput\"\r\n                                id={'member_pw2'}\r\n                                placeholder=\"비밀번호 확인\"\r\n                                value={PW2}\r\n                                maxLength={30}\r\n                                onChange={(e) => {\r\n                                    onPW2handler(e);\r\n                                    checkPW2();\r\n                                    handleButton();\r\n                                }}\r\n                                bordered={false}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className={styles.inputContainer}>\r\n                            <label className={styles.label} htmlFor=\"member_email\">\r\n                                이메일<b className={styles.b}>*</b>\r\n                            </label>\r\n                            <Input\r\n                                className=\"joinInput\"\r\n                                id={'member_email'}\r\n                                placeholder=\"이메일\"\r\n                                value={Mail}\r\n                                maxLength={40}\r\n                                onChange={(e) => {\r\n                                    onMailhandler(e);\r\n                                    checkMail();\r\n                                    handleButton();\r\n                                }}\r\n                                bordered={false}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className={styles.inputContainer}>\r\n                            <label className={styles.label} htmlFor=\"member_phon\">\r\n                                전화번호<b className={styles.b}>*</b>\r\n                            </label>\r\n                            <Input\r\n                                className=\"joinInput\"\r\n                                id={'member_phon'}\r\n                                placeholder=\"전화번호\"\r\n                                value={Number}\r\n                                maxLength={20}\r\n                                onChange={(e) => {\r\n                                    onNumberhandler(e);\r\n                                    checkNumber();\r\n                                    handleButton();\r\n                                }}\r\n                                bordered={false}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className={styles.inputContainer}>\r\n                            <label className={styles.label} htmlFor=\"member_adrs\">\r\n                                주소<b className={styles.b}>*</b>\r\n                            </label>\r\n                            <Input\r\n                                className=\"joinInput\"\r\n                                id={'member_adrs'}\r\n                                placeholder=\"주소\"\r\n                                value={Address}\r\n                                maxLength={100}\r\n                                onChange={(e) => {\r\n                                    onAddresshandler(e);\r\n                                    checkAddress();\r\n                                    handleButton();\r\n                                }}\r\n                                bordered={false}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <b className={styles.b}>* 표시된 항목은 필수입력 사항입니다.</b>\r\n                        <button className={styles.joinButton} type=\"submit\" disabled>\r\n                            회원가입\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className={styles.info}>\r\n                    <Link to=\"/service\">고객센터</Link>\r\n                    <h3>J2KB Study Group. since 2020</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(JoinPage);\r\n","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\ProductDetailPage\\ProductDetailPage.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\UploadProductPage\\UploadProductPage.js",["146","147"],"import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport DropZone from '../utils/dropZone';\r\nimport { Input, Button } from 'antd';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst { TextArea } = Input;\r\n\r\nlet Continents = [\r\n    { key: 1, value: '1' },\r\n    { key: 2, value: '2' },\r\n    { key: 3, value: '3' },\r\n    { key: 4, value: '4' },\r\n    { key: 5, value: '5' },\r\n    { key: 6, value: '6' },\r\n    { key: 7, value: '7' },\r\n    { key: 8, value: '8' },\r\n    { key: 9, value: '9' },\r\n    { key: 10, value: '10' },\r\n];\r\n\r\nfunction UploadProductPage(props) {\r\n    const [Title, setTitle] = useState('');\r\n    const [Description, setDescription] = useState('');\r\n    const [Price, setPrice] = useState(0);\r\n    const [Continent, setContinent] = useState(1);\r\n    const [Image, setImage] = useState([]);\r\n\r\n    const onTitleHandler = (e) => {\r\n        setTitle(e.currentTarget.value);\r\n    };\r\n    const onDescriptionHandler = (e) => {\r\n        setDescription(e.currentTarget.value);\r\n    };\r\n    const onPriceHandler = (e) => {\r\n        setPrice(e.currentTarget.value);\r\n    };\r\n\r\n    const onContinentHandler = (e) => {\r\n        setContinent(e.currentTarget.value);\r\n    };\r\n\r\n    const onSubmithandler = (e) => {\r\n        e.preventDefault();\r\n        if (!Title || !Description || !Price || !Continent) {\r\n            alert('모든 값을 넣어 주세요!');\r\n        } else {\r\n            alert('성공!');\r\n            // 메인으로 이동\r\n            props.history.push('/');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: '750px', margin: '3rem auto' }}>\r\n            <Helmet>\r\n                <title>상품 등록 페이지</title>\r\n            </Helmet>\r\n            <div style={{ textAlign: 'center' }}>\r\n                <h1 style={{ fontSize: '2rem' }}>Product Upload</h1>\r\n            </div>\r\n            <br />\r\n            <form onSubmit={onSubmithandler}>\r\n                <DropZone />\r\n                <br />\r\n                <br />\r\n                <label>이름</label>\r\n                <Input value={Title} onChange={onTitleHandler} />\r\n                <br />\r\n                <br />\r\n                <label>설명</label>\r\n                <TextArea value={Description} onChange={onDescriptionHandler} />\r\n                <br />\r\n                <br />\r\n                <label>가격</label>\r\n                <Input value={Price} onChange={onPriceHandler} />\r\n                <br />\r\n                <br />\r\n                <label>카테고리</label>\r\n                <br />\r\n                <select value={Continent} onChange={onContinentHandler}>\r\n                    {Continents.map((item) => (\r\n                        <option key={item.key} value={item.key}>\r\n                            {item.value}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <Button htmlType=\"submit\">확인</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(UploadProductPage);\r\n","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\IdPwFind\\PwFind.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\CustomerPage\\CustomerPage.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\AdminPage\\AdminPage.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\ServicePage\\ServicePage.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\CartPage\\CartPage.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\ReviewWritePage\\ReviewWriterPage.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\_actions\\user_action.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\_actions\\type.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\IdPwFind\\IdPwFunc.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\utils\\ImageSlider.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\utils\\WritingForm.js",["148"],"import React from 'react'\r\nimport { Form, Input, Select, Button } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction WritingForm(props) {\r\n    return (\r\n        <div>\r\n             <Form\r\n                layout=\"inline\"\r\n                name=\"nest-messages\"\r\n                style={{justifyContent:'space-between'}}>\r\n                    <Form.Item name={['title']} label=\"제목\" style={{width: \"60%\"}}>\r\n                        <Input/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                    name={['product', 'name']}\r\n                    label={props.index}\r\n                    style={{width: \"30%\"}}\r\n                    >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Search or Select\"\r\n                        optionFilterProp=\"children\"\r\n                    >\r\n                        {props.list.map(item => (\r\n                            <Option value={item.value}>{item.name}</Option>\r\n                        ))}\r\n                    </Select>\r\n                    </Form.Item>\r\n\r\n                </Form>\r\n                <br/>\r\n                <Form\r\n                layout=\"vertical\"\r\n                name=\"nest-messages\" >\r\n                <Form.Item name={['description']} label=\"내용\">\r\n                    <Input.TextArea style={{height: \"400px\"}} />\r\n                </Form.Item>\r\n                <Form.Item name={['image']} label=\"이미지 첨부\">\r\n                    <input type=\"file\"/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                <button style={{ width: \"100%\", maxWidth: \"400px\", height: \"50px\", border: \"none\", backgroundColor: \"black\",\r\n                color: \"white\", fontWeight: 600, fontSize: \"22px\", marginBottom: \"30px\"}}>업로드</button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WritingForm\r\n","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\utils\\Func.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\NavBar\\NavBar.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\utils\\dropZone.js",["149"],"import React, { useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nfunction dropZone() {\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone onDrop={(acceptedFiles) => console.log(acceptedFiles)}>\r\n                {/*클릭 시 사진 선택*/}\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <section>\r\n                        <div\r\n                            style={{\r\n                                width: '300px',\r\n                                height: '250px',\r\n                                border: '1px solid black',\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                            }}\r\n                            {...getRootProps()}\r\n                        >\r\n                            <input {...getInputProps()} />\r\n                            <PlusOutlined />\r\n                        </div>\r\n                    </section>\r\n                )}\r\n            </Dropzone>\r\n            <div\r\n                style={{\r\n                    width: '300px',\r\n                    height: '250px',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                선택한 사진 나옴\r\n                <br />\r\n                (서버 연결하면 만들게요)\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default dropZone;\r\n","C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\config.js",[],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\hoc\\auth.js",["150","151"],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\NavBar\\RightMenu.js",["152"],"C:\\Users\\jinsu\\Desktop\\J2KB-BBBBFF-FE\\src\\components\\NavBar\\BottomMenu.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"161","line":1,"column":27,"nodeType":"159","messageId":"160","endLine":1,"endColumn":36},{"ruleId":"162","severity":1,"message":"163","line":3,"column":1,"nodeType":"164","endLine":16,"endColumn":2},{"ruleId":"157","severity":1,"message":"158","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"165","line":2,"column":26,"nodeType":"159","messageId":"160","endLine":2,"endColumn":31},{"ruleId":"166","severity":1,"message":"167","line":12,"column":1,"nodeType":"168","messageId":"169","endLine":14,"endColumn":2},{"ruleId":"157","severity":1,"message":"170","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":19},{"ruleId":"157","severity":1,"message":"171","line":14,"column":11,"nodeType":"159","messageId":"160","endLine":14,"endColumn":19},{"ruleId":"157","severity":1,"message":"172","line":18,"column":13,"nodeType":"159","messageId":"160","endLine":18,"endColumn":17},{"ruleId":"166","severity":1,"message":"173","line":22,"column":9,"nodeType":"168","messageId":"174","endLine":36,"endColumn":10},{"ruleId":"166","severity":1,"message":"173","line":37,"column":9,"nodeType":"168","messageId":"174","endLine":39,"endColumn":10},{"ruleId":"166","severity":1,"message":"173","line":45,"column":9,"nodeType":"168","messageId":"174","endLine":47,"endColumn":10},{"ruleId":"157","severity":1,"message":"175","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":22},{"ruleId":"157","severity":1,"message":"171","line":29,"column":11,"nodeType":"159","messageId":"160","endLine":29,"endColumn":19},{"ruleId":"166","severity":1,"message":"173","line":31,"column":5,"nodeType":"168","messageId":"174","endLine":37,"endColumn":6},{"ruleId":"157","severity":1,"message":"172","line":43,"column":13,"nodeType":"159","messageId":"160","endLine":43,"endColumn":17},{"ruleId":"166","severity":1,"message":"173","line":52,"column":9,"nodeType":"168","messageId":"174","endLine":68,"endColumn":10},{"ruleId":"166","severity":1,"message":"173","line":70,"column":9,"nodeType":"168","messageId":"174","endLine":72,"endColumn":10},{"ruleId":"166","severity":1,"message":"173","line":80,"column":9,"nodeType":"168","messageId":"174","endLine":82,"endColumn":10},{"ruleId":"157","severity":1,"message":"176","line":27,"column":12,"nodeType":"159","messageId":"160","endLine":27,"endColumn":17},{"ruleId":"157","severity":1,"message":"177","line":27,"column":19,"nodeType":"159","messageId":"160","endLine":27,"endColumn":27},{"ruleId":"157","severity":1,"message":"178","line":2,"column":31,"nodeType":"159","messageId":"160","endLine":2,"endColumn":37},{"ruleId":"157","severity":1,"message":"158","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":5,"column":1,"nodeType":"164","endLine":36,"endColumn":2},{"ruleId":"179","severity":1,"message":"180","line":32,"column":12,"nodeType":"181","endLine":32,"endColumn":14,"suggestions":"182"},{"ruleId":"166","severity":1,"message":"167","line":6,"column":1,"nodeType":"168","messageId":"169","endLine":8,"endColumn":2},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Input' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'loginUser' is defined but never used.","'dispatch' is assigned a value but never used.","'data' is assigned a value but never used.","Nested block is redundant.","redundantNestedBlock","'registerUser' is defined but never used.","'Image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"188","text":"189"},[1113,1115],"[dispatch, props.history]"]